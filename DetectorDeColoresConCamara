import cv2
import numpy as np

def dibujar(mask, color, nombrecolor):
  contornos,_ = cv2.findContours(mask, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

  for c in contornos:
    area = cv2.contourArea(c)

    if area > 5000:
      M = cv2.moments(c)
      if (M["m00"]==0): M["m00"]=1
      x = int(M["m10"]/M["m00"])
      y = int(M['m01']/M['m00'])

      nuevoContorno = cv2.convexHull(c)
      
      cv2.imshow('Imagen binaria', mask)
      cv2.putText(frame,nombrecolor,(x+10,y), font, 0.75,(0,255,0),1,cv2.LINE_AA)a
      cv2.drawContours(frame, [nuevoContorno], -1, color, 3)

cap = cv2.VideoCapture(0)

#OBTENER COLORES EN HSV
#Rojo
redBajo1 = np.array([0,100,20],np.uint8)
redAlto1 = np.array([5,255,255],np.uint8)

redBajo2 = np.array([175,100,20],np.uint8)
redAlto2 = np.array([179,255,255],np.uint8)

#Azul
azulBajo = np.array([100,100,20],np.uint8)
azulAlto = np.array([125,255,255],np.uint8)

#Verde
verdeBajo = np.array([36, 100, 20], np.uint8)
verdeAlto = np.array([70, 255, 255], np.uint8)

font = cv2.FONT_HERSHEY_SIMPLEX

while True:
  ret,frame = cap.read()
  
  if ret == True:
    frameHSV = cv2.cvtColor(frame,cv2.COLOR_BGR2HSV)

    #OBTENEMOS IMAGENES BINARIAS
    maskAzul = cv2.inRange(frameHSV,azulBajo,azulAlto)
    maskRed1 = cv2.inRange(frameHSV,redBajo1,redAlto1)
    maskRed2 = cv2.inRange(frameHSV,redBajo2,redAlto2)
    maskRed = cv2.add(maskRed1,maskRed2)
    maskVerde = cv2.inRange(frameHSV,verdeBajo,verdeAlto)

    # FUNCION DIBUJAR
    #dibujar(imagen_binaria, color_en_BGR,nobre_del_color)
    dibujar(maskAzul,(255,0,0),'Azul')
    dibujar(maskRed,(0,0,255),'Rojo')
    dibujar(maskVerde,(0,255,0),'Verde')

    cv2.imshow('Arquitectura - Proyecto Final',frame)

    if cv2.waitKey(1) & 0xFF == ord('s'):
      break

cap.release()
cv2.destroyAllWindows()
